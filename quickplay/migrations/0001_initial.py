# Generated by Django 4.2.16 on 2025-02-03 08:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AIQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question_text", models.TextField()),
                ("correct_answer", models.CharField(max_length=255)),
                ("wrong_answers", models.JSONField()),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("easy", "Easy"),
                            ("medium", "Medium"),
                            ("hard", "Hard"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("logical_reasoning", "Logical Reasoning"),
                            ("quantitative_reasoning", "Quantitative Reasoning"),
                            ("linguistic_reasoning", "Linguistic Reasoning"),
                            ("spatial_reasoning", "Spatial Reasoning"),
                        ],
                        max_length=25,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                ("times_used", models.IntegerField(default=0)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="QuickplayQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question_text", models.TextField()),
                ("option_1", models.CharField(max_length=200)),
                ("option_2", models.CharField(max_length=200)),
                ("option_3", models.CharField(max_length=200)),
                ("option_4", models.CharField(max_length=200)),
                ("correct_answer", models.CharField(max_length=200)),
                ("explanation", models.TextField()),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("easy", "Easy"),
                            ("medium", "Medium"),
                            ("hard", "Hard"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("logical_reasoning", "Logical Reasoning"),
                            ("verbal_linguistic", "Verbal Linguistic"),
                            ("spatial_reasoning", "Spatial Reasoning"),
                            ("critical_thinking", "Critical Thinking"),
                        ],
                        default="reasoning",
                        max_length=20,
                    ),
                ),
                (
                    "target_response_time",
                    models.FloatField(
                        blank=True,
                        help_text="Target time to answer in seconds",
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="QuickplayGame",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("score", models.IntegerField(default=0)),
                ("lives_remaining", models.IntegerField(default=3)),
                ("is_completed", models.BooleanField(default=False)),
                ("time_limit", models.IntegerField(default=300)),
                ("highest_speed_level", models.IntegerField(default=60)),
                (
                    "categories_string",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated list of selected categories",
                        max_length=255,
                    ),
                ),
                (
                    "total_response_time",
                    models.FloatField(
                        default=0.0, help_text="Total time spent answering questions"
                    ),
                ),
                (
                    "breaks_taken",
                    models.IntegerField(
                        default=0, help_text="Number of breaks taken during game"
                    ),
                ),
                (
                    "device_info",
                    models.JSONField(
                        default=dict, help_text="Information about user's device"
                    ),
                ),
                (
                    "interaction_patterns",
                    models.JSONField(
                        default=dict, help_text="User interaction patterns during game"
                    ),
                ),
                (
                    "categories",
                    models.ManyToManyField(
                        blank=True, related_name="games", to="quickplay.category"
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-start_time"],
            },
        ),
        migrations.CreateModel(
            name="QuickplayAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_answer", models.CharField(max_length=200)),
                ("is_correct", models.BooleanField()),
                ("answered_at", models.DateTimeField(auto_now_add=True)),
                (
                    "response_time",
                    models.FloatField(
                        default=0.0, help_text="Time taken to answer in seconds"
                    ),
                ),
                (
                    "confidence_level",
                    models.IntegerField(
                        default=0, help_text="User's confidence level 1-5"
                    ),
                ),
                (
                    "answer_changed",
                    models.BooleanField(
                        default=False, help_text="Whether user changed their answer"
                    ),
                ),
                (
                    "initial_answer",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "interaction_data",
                    models.JSONField(
                        default=dict,
                        help_text="Detailed interaction data during answering",
                    ),
                ),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="quickplay.quickplaygame",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="quickplay.quickplayquestion",
                    ),
                ),
            ],
            options={
                "ordering": ["answered_at"],
            },
        ),
        migrations.CreateModel(
            name="Leaderboard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.IntegerField()),
                ("date_achieved", models.DateTimeField(auto_now_add=True)),
                ("time_taken", models.IntegerField()),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Leaderboard Entries",
                "ordering": ["-score", "time_taken"],
            },
        ),
    ]
